{"version":3,"sources":["pages/assets/demo.png","components/Menu.js","components/Navbar.js","pages/Home.js","pages/Register.js","pages/Login.js","pages/Logout.js","pages/Dashboard.js","pages/CreateLink.js","pages/Analytics.js","pages/Account.js","pages/ProfilePicture.js","pages/ChangePassword.js","pages/ForgotPassword.js","pages/ResetPassword.js","pages/EditSite.js","pages/EditLink.js","pages/UserProfile.js","pages/404.js","pages/403.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","props","useState","loggingOut","setLoggingOut","to","className","state","onClick","axios","get","then","response","data","message","localStorage","removeItem","Navbar","showMenu","setShowMenu","LoggedInNavbar","Home","token","setToken","useEffect","getItem","src","demo","alt","width","Register","firstName","setFirstName","lastName","setLastName","username","setUsername","email","setEmail","password","setPassword","redirectToLogin","setRedirectToLogin","alreadyExists","setAlreadyExists","loggedIn","setLoggedIn","onSubmit","event","preventDefault","user","post","type","min","max","placeholder","name","id","onChange","e","target","value","required","Login","invalidPassword","setInvalidPassword","accountDoesNotExist","setAccountDoesNotExist","setItem","Logout","Dashboard","links","setLinks","linkDeleted","setLinkDeleted","notFound","setNotFound","forbidden","setForbidden","currentUser","setCurrentUser","headers","pathname","length","map","link","index","href","linkURL","linkName","linkId","deleteLink","CreateLink","setLinkName","setLinkURL","linkCreated","setLinkCreated","Analytics","views","setViews","Account","bio","setBio","accountUpdated","setAccountUpdated","imgUrl","setImgUrl","trim","error","style","minHeight","ProfilePicture","profilePicture","setProfilePicture","profilePicResponse","setProfilePicResponse","FormData","append","statusResponse","encType","files","accept","ChangePassword","currentPassword","setCurrentPassword","newPassword","setNewPassword","passwordUpdated","setPasswordUpdated","currentPasswordMatch","setCurrentPasswordMatch","ForgotPassword","invalidUser","setInvalidUser","emailSent","setEmailSent","frontendURL","document","location","origin","userValid","ResetPassword","userEmail","setUserEmail","useParams","EditSite","siteBgColor","setSiteBgColor","linkBgColor","setLinkBgColor","linkColor","setLinkColor","textColor","setTextColor","siteUpdated","setSiteUpdated","siteConfig","bgColor","linkEdited","setLinkEdited","linkUpdated","UserPage","userData","setUserData","doesUserExist","setDoesUserExist","backgroundColor","color","userFirstName","userLastName","userBio","userLinks","bottom","position","NotFound","Forbidden","App","exact","path","EditLink","UserProfile","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d67f4286.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/demo.dc52bb3a.png\";","import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction Menu(props) {\n  const [loggingOut, setLoggingOut] = useState(false);\n\n  const logout = () => {\n    axios.get(\"/api/logout\").then((response) => {\n      if (response.data.message === \"Logging out\") {\n        localStorage.removeItem(\"token\");\n        setLoggingOut(true);\n      }\n    });\n  };\n\n  if (loggingOut) {\n    return <Redirect to=\"/login\" />;\n  }\n  return (\n    <div className=\"bg-white z-[100]\">\n      {props.state === \"logged out\" ? (\n        <ul className=\"flex flex-col justify-center items-center\">\n          <Link to=\"/login\" className=\"p-2 mb-2\">\n            Login\n          </Link>\n          <Link\n            to=\"/login\"\n            className=\"mb-2 bg-green-400 p-2 rounded-xl text-white hover:bg-green-600\"\n          >\n            Register\n          </Link>\n        </ul>\n      ) : (\n        <ul className=\"flex flex-col justify-center items-center\">\n          <Link to=\"/dashboard\" className=\"p-2 mb-2\">\n            Dashboard\n          </Link>\n          <Link to=\"/create-link\" className=\"p-2 mb-2\">\n            Create Link\n          </Link>\n          <Link to=\"/analytics\" className=\"p-2 mb-2\">\n            Analytics\n          </Link>\n          <Link to=\"/account\" className=\"p-2 mb-2\">\n            Account\n          </Link>\n          <button\n            className=\"mb-2 bg-green-400 p-2 rounded-xl text-white hover:bg-green-600\"\n            onClick={() => logout()}\n          >\n            Logout\n          </button>\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Menu;\n","import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { FaGripLines } from \"react-icons/fa\";\nimport { GrClose } from \"react-icons/gr\";\nimport Menu from \"./Menu.js\";\n\nexport function Navbar() {\n  const [showMenu, setShowMenu] = useState(false);\n  return (\n    <div className=\"flex flex-col z-[100] fixed w-full\">\n      <nav className=\"navbar bg-white flex flex-row justify-between items-center py-4 px-6 font-sans antialiased tracking-wider\">\n        <div className=\"branding md:text-2xl text-xl\">\n          <Link to=\"/\" className=\"flex\">\n            <p>NodeLink</p>\n          </Link>\n        </div>\n        <ul className=\"flex flex-center md:inline hidden md:text-lg text-base\">\n          <Link to=\"/login\" className=\"mx-3 p-2\">\n            Login\n          </Link>\n          <Link\n            to=\"/register\"\n            className=\"mx-3 bg-green-500 p-2 rounded-xl text-white hover:bg-green-600\"\n          >\n            Register\n          </Link>\n        </ul>\n        {showMenu ? (\n          <GrClose\n            className=\"md:hidden inline cursor-pointer\"\n            onClick={() => setShowMenu(false)}\n          />\n        ) : (\n          <FaGripLines\n            className=\"md:hidden inline cursor-pointer\"\n            onClick={() => setShowMenu(true)}\n          />\n        )}\n      </nav>\n      {showMenu ? <Menu state=\"logged out\" /> : <></>}\n    </div>\n  );\n}\n\nexport function LoggedInNavbar() {\n  const [loggingOut, setLoggingOut] = useState(false);\n  const [showMenu, setShowMenu] = useState(false);\n\n  const logout = () => {\n    axios.get(\"/api/logout\").then((response) => {\n      if (response.data.message === \"Logging out\") {\n        localStorage.removeItem(\"token\");\n        setLoggingOut(true);\n      }\n    });\n  };\n\n  if (loggingOut) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div className=\"flex flex-col z-[100] fixed w-full\">\n      <nav className=\"navbar bg-white flex flex-row justify-between items-center py-4 px-6 font-sans antialiased tracking-wider\">\n        <div className=\"branding md:text-2xl text-xl\">\n          <Link to=\"/dashboard\" className=\"flex\">\n            <p>NodeLink</p>\n          </Link>\n        </div>\n        <ul className=\"flex flex-center md:inline hidden md:text-lg text-base\">\n          <Link to=\"/dashboard\" className=\"mx-3 p-2\">\n            Dashboard\n          </Link>\n          <Link to=\"/create-link\" className=\"mx-3 p-2\">\n            Create Link\n          </Link>\n          <Link to=\"/analytics\" className=\"mx-3 p-2\">\n            Analytics\n          </Link>\n          <Link to=\"/account\" className=\"mx-3 p-2\">\n            Account\n          </Link>\n          <button\n            className=\"mx-3 bg-green-500 p-2 rounded-xl text-white hover:bg-green-600\"\n            onClick={() => logout()}\n          >\n            Logout\n          </button>\n        </ul>\n        {showMenu ? (\n          <GrClose\n            className=\"md:hidden inline cursor-pointer\"\n            onClick={() => setShowMenu(false)}\n          />\n        ) : (\n          <FaGripLines\n            className=\"md:hidden inline cursor-pointer\"\n            onClick={() => setShowMenu(true)}\n          />\n        )}\n      </nav>\n      {showMenu ? <Menu state=\"logged in\" /> : <></>}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport demo from \"./assets/demo.png\";\nimport { Navbar } from \"../components/Navbar\";\n\nfunction Home() {\n  const [token, setToken] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      setToken(true);\n    }\n  }, []);\n\n  if (token) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n  return (\n    <div className=\"font-sans antialiased bg-white\">\n      <Navbar />\n      <div className=\"flex flex-col justify-center items-center md:pt-36 pt-24\">\n        <div className=\"text-center tracking-widest mb-12\">\n          <h1 className=\"md:text-4xl text-2xl mb-2\">\n            One Link That Does It All\n          </h1>\n          <span className=\"text-gray-600\">\n            Connect all your audiences with one link.\n          </span>\n        </div>\n\n        <div className=\"flex flex-col mb-24\">\n          <Link\n            to=\"/register\"\n            className=\"p-4 bg-green-500 rounded-xl tracking-wide text-white text-center font-semibold cursor-pointer hover:bg-green-600\"\n          >\n            GET STARTED FOR FREE\n          </Link>\n          <span className=\"mt-4 text-sm text-center\">\n            Already have an account?{\" \"}\n            <Link to=\"/login\" className=\"underline hover:no-underline\">\n              Log in\n            </Link>\n            .\n          </span>\n        </div>\n\n        <div className=\"flex flex-col justify-center items-center mb-10 \">\n          <img\n            src={demo}\n            alt=\"Demo for user profile\"\n            width=\"300\"\n            className=\"mb-10\"\n          />\n          <div className=\"border border-green-400 md:p-4 p-3 sm:text-base text-sm rounded-3xl text-center\">\n            nodelinkapp.herokuapp.com/\n            <span className=\"text-gray-600\">yourNameHere</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport axios from \"axios\";\nimport { Navbar } from \"../components/Navbar\";\n\nfunction Register() {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [redirectToLogin, setRedirectToLogin] = useState(false);\n  const [alreadyExists, setAlreadyExists] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      setLoggedIn(true);\n    }\n  }, []);\n\n  const sendPostReq = (event) => {\n    event.preventDefault();\n\n    const user = {\n      firstName: firstName,\n      lastName: lastName,\n      username: username,\n      email: email,\n      password: password,\n    };\n\n    axios.post(\"/api/register\", { user }).then((response) => {\n      if (response.data.message === \"User account created\") {\n        setRedirectToLogin(true);\n      }\n      if (\n        response.data.message ===\n        \"Username or email already belongs to another user\"\n      ) {\n        setAlreadyExists(true);\n        setFirstName(\"\");\n        setLastName(\"\");\n        setUsername(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n      }\n    });\n  };\n\n  if (redirectToLogin) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  if (loggedIn) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <div className=\"font-sans antialiased bg-white\">\n      <Navbar />\n      <div className=\"flex flex-col justify-center items-center md:pt-36 pt-24 mx-6\">\n        <div className=\"form w-full md:w-1/2\">\n          <div className=\"tracking-wider mb-10\">\n            {alreadyExists ? (\n              <>\n                <h1 className=\"md:text-3xl text-2xl mb-2\">Register for Free</h1>\n                <span>\n                  Username or email already exists. Please choose a different\n                  one.\n                </span>\n              </>\n            ) : (\n              <h1 className=\"md:text-3xl text-2xl\">Register for Free</h1>\n            )}\n          </div>\n          <form onSubmit={sendPostReq}>\n            <div className=\"w-full flex justify-center items-center\">\n              <input\n                type=\"text\"\n                min=\"4\"\n                max=\"20\"\n                placeholder=\"First Name\"\n                name=\"first-name\"\n                id=\"first-name\"\n                onChange={(e) => setFirstName(e.target.value)}\n                value={firstName}\n                className=\"w-1/2 mr-1 p-4 border border-gray-100 bg-gray-100 rounded-xl focus:border-gray-100 focus:outline-none focus:bg-white tracking-wide mb-4\"\n                required\n              />\n              <input\n                type=\"text\"\n                min=\"4\"\n                max=\"30\"\n                placeholder=\"Last Name\"\n                name=\"last-name\"\n                id=\"last-name\"\n                onChange={(e) => setLastName(e.target.value)}\n                value={lastName}\n                className=\"w-1/2 ml-1 p-4 border border-gray-100 bg-gray-100 rounded-xl focus:border-gray-100 focus:outline-none focus:bg-white tracking-wide mb-4\"\n                required\n              />\n            </div>\n            <input\n              type=\"text\"\n              min=\"4\"\n              max=\"20\"\n              placeholder=\"Username\"\n              name=\"username\"\n              id=\"username\"\n              onChange={(e) => setUsername(e.target.value)}\n              value={username}\n              className=\"w-full p-4 border border-gray-100 bg-gray-100 rounded-xl focus:border-gray-100 focus:outline-none focus:bg-white tracking-wide mb-4\"\n              required\n            />\n            <input\n              type=\"email\"\n              min=\"7\"\n              max=\"320\"\n              placeholder=\"Email\"\n              name=\"email\"\n              id=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n              className=\"w-full p-4 border border-gray-100 bg-gray-100 rounded-xl focus:border-gray-100 focus:outline-none focus:bg-white tracking-wide mb-4\"\n              required\n            />\n            <input\n              type=\"password\"\n              min=\"8\"\n              placeholder=\"Password\"\n              name=\"password\"\n              id=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n              className=\"w-full p-4 border border-gray-100 bg-gray-100 rounded-xl focus:border-gray-100 focus:outline-none focus:bg-white tracking-wide mb-4\"\n              required\n            />\n            <div className=\"flex flex-col items-start mb-4\">\n              <span>\n                Already have an account?{\" \"}\n                <Link className=\"underline hover:no-underline\" to=\"/login\">\n                  Log in\n                </Link>\n                .\n              </span>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"p-4 bg-green-400 text-white rounded-xl\"\n            >\n              Create New Account\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Register;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Navbar } from \"../components/Navbar\";\n\nfunction Login() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [invalidPassword, setInvalidPassword] = useState(false);\n  const [accountDoesNotExist, setAccountDoesNotExist] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      setLoggedIn(true);\n    }\n  }, []);\n  const sendPostReq = (event) => {\n    event.preventDefault();\n\n    const user = {\n      username: username,\n      password: password,\n    };\n\n    axios.post(\"/api/login\", { user }).then((response) => {\n      if (response.data.message === \"Verification successful\") {\n        // Log user in\n        localStorage.setItem(\"token\", response.data.token);\n        setLoggedIn(true);\n      }\n      if (response.data.message === \"Password is invalid\") {\n        setInvalidPassword(true);\n        setAccountDoesNotExist(false);\n        setPassword(\"\");\n      }\n      if (response.data.message === \"This account does not exist\") {\n        setAccountDoesNotExist(true);\n        setInvalidPassword(false);\n        setUsername(\"\");\n        setPassword(\"\");\n      }\n    });\n  };\n\n  if (loggedIn) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <div className=\"font-sans antialiased bg-white\">\n      <Navbar />\n      <div className=\"flex flex-col justify-center items-center md:pt-36 pt-24 mx-6\">\n        <div className=\"form w-full md:w-1/2\">\n          <div className=\"tracking-wider mb-10\">\n            {invalidPassword || accountDoesNotExist ? (\n              <h1 className=\"md:text-3xl text-2xl mb-2\">Log In to NodeLink</h1>\n            ) : (\n              <h1 className=\"md:text-3xl text-2xl\">Log In to NodeLink</h1>\n            )}\n\n            {invalidPassword ? (\n              <>\n                <span>Password is incorrect.</span>\n                <br></br>\n              </>\n            ) : (\n              <></>\n            )}\n\n            {accountDoesNotExist ? (\n              <span>This account does not exist.</span>\n            ) : (\n              <></>\n            )}\n          </div>\n          <form onSubmit={sendPostReq}>\n            <input\n              type=\"text\"\n              min=\"4\"\n              max=\"20\"\n              placeholder=\"Username\"\n              name=\"username\"\n              id=\"username\"\n              onChange={(e) => setUsername(e.target.value)}\n              value={username}\n              className=\"w-full p-4 border border-gray-100 bg-gray-100 rounded-xl focus:border-gray-100 focus:outline-none focus:bg-white tracking-wide mb-4\"\n              required\n            />\n            <input\n              type=\"password\"\n              min=\"8\"\n              placeholder=\"Password\"\n              name=\"password\"\n              id=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n              className=\"w-full p-4 border border-gray-100 bg-gray-100 rounded-xl focus:border-gray-100 focus:outline-none focus:bg-white tracking-wide mb-4\"\n              required\n            />\n            <div className=\"flex flex-col mb-4\">\n              <span className=\"mb-1\">\n                Forgot your password? Click{\" \"}\n                <Link\n                  className=\"underline hover:no-underline\"\n                  to=\"/forgot-password\"\n                >\n                  here\n                </Link>{\" \"}\n                to reset it.\n              </span>\n              <span>\n                Don't have an account?{\" \"}\n                <Link className=\"underline hover:no-underline\" to=\"/register\">\n                  Sign up\n                </Link>{\" \"}\n                now.\n              </span>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"p-4 bg-green-400 text-white rounded-xl\"\n            >\n              Log in\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction Logout() {\n  let loggingOut = true;\n  localStorage.removeItem(\"token\");\n  if (loggingOut) {\n    return <Redirect to=\"/login\" />;\n  }\n}\n\nexport default Logout;\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { FiEdit, FiTrash2 } from \"react-icons/fi\";\nimport { LoggedInNavbar } from \"../components/Navbar\";\n\nfunction Dashboard() {\n  const [loggedIn, setLoggedIn] = useState(true);\n  const [links, setLinks] = useState([{}]);\n  const [linkDeleted, setLinkDeleted] = useState(false);\n  const [notFound, setNotFound] = useState(false);\n  const [forbidden, setForbidden] = useState(false);\n  const [currentUser, setCurrentUser] = useState([{}]);\n\n  useEffect(() => {\n    axios\n      .get(\"/api/dashboard\", {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        if (response.data.message !== \"Logged in\") {\n          setLoggedIn(false);\n        }\n        if (response.data.links) {\n          setLinks(response.data.links);\n        }\n        if (response.data.user) {\n          setCurrentUser(response.data.user);\n        }\n      });\n  }, [linkDeleted]);\n\n  const deleteLink = (linkId) => {\n    const token = localStorage.getItem(\"token\");\n    axios\n      .post(\n        `/api/delete-link/${linkId}`,\n        { linkId },\n        {\n          headers: {\n            \"x-access-token\": token,\n          },\n        }\n      )\n      .then((response) => {\n        if (response.data.message !== \"Logged in\") {\n          setLoggedIn(false);\n        }\n        if (response.data.linkDeleted) {\n          setLinkDeleted(true);\n        }\n        if (response.data.forbidden === \"Cannot do that\") {\n          setForbidden(true);\n        }\n\n        if (response.data.notFound === \"404 not found\") {\n          setNotFound(true);\n        }\n        setLinkDeleted(false);\n      });\n  };\n\n  if (!loggedIn) {\n    localStorage.removeItem(\"token\");\n    return <Redirect to=\"/login\" />;\n  }\n\n  if (forbidden) {\n    return <Redirect to=\"/403-forbidden\" />;\n  }\n\n  if (notFound) {\n    return <Redirect to=\"/404-page-not-found\" />;\n  }\n\n  return (\n    <div className=\"font-sans antialiased bg-white\">\n      <LoggedInNavbar />\n      <div className=\"flex flex-col md:pt-36 pt-24 mx-8\">\n        <div className=\"flex flex-col\">\n          <div className=\"mb-8 flex flex-col\">\n            <h1 className=\"text-2xl mb-2 tracking-widest\">DASHBOARD</h1>\n            <div>\n              {currentUser !== \"undefined\" ? (\n                <Link\n                  to={{ pathname: `/${currentUser.username}` }}\n                  className=\"text-blue-500 mb-1\"\n                >\n                  View my NodeLink website.\n                </Link>\n              ) : (\n                <></>\n              )}\n            </div>\n            <div>\n              <Link to=\"/edit-site\" className=\"text-blue-500\">\n                Edit my site's appearance.\n              </Link>\n            </div>\n          </div>\n          <div className=\"links flex flex-wrap\">\n            {typeof links !== \"undefined\" ? (\n              links.length > 0 ? (\n                links.map((link, index) => (\n                  <div\n                    key={index}\n                    className=\"link w-full md:my-4 my-2 p-6 shadow-xl rounded-xl bg-green-400 text-white\"\n                  >\n                    <div className=\"flex justify-between items-center\">\n                      <a href={link.linkURL} target=\"__blank\">\n                        {link.linkName}\n                      </a>\n                      <div className=\"flex justify-center items-center\">\n                        <Link\n                          className=\"mx-2\"\n                          to={{ pathname: `/edit-link/${link.id}` }}\n                        >\n                          <FiEdit />\n                        </Link>\n                        <button onClick={() => deleteLink(link.id)}>\n                          <FiTrash2 />\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                ))\n              ) : (\n                <p>You have no links at the moment.</p>\n              )\n            ) : (\n              <p>Loading...</p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { LoggedInNavbar } from \"../components/Navbar\";\n\nfunction CreateLink() {\n  const [loggedIn, setLoggedIn] = useState(true);\n  const [linkName, setLinkName] = useState(\"\");\n  const [linkURL, setLinkURL] = useState(\"\");\n  const [linkCreated, setLinkCreated] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(\"/api/create-link\", {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        if (response.data.message !== \"Logged in\") {\n          setLoggedIn(false);\n        }\n      });\n  }, []);\n\n  if (!loggedIn) {\n    localStorage.removeItem(\"token\");\n    return <Redirect to=\"/login\" />;\n  }\n\n  const sendPostReq = (event) => {\n    event.preventDefault();\n\n    const link = {\n      linkName: linkName,\n      linkURL: linkURL,\n    };\n\n    const token = localStorage.getItem(\"token\");\n\n    axios\n      .post(\n        \"/api/create-link\",\n        { link },\n        {\n          headers: {\n            \"x-access-token\": token,\n          },\n        }\n      )\n      .then((response) => {\n        if (response.data.message !== \"Logged in\") {\n          setLoggedIn(false);\n        }\n        if (response.data.linkCreated) {\n          setLinkCreated(true);\n        }\n      });\n  };\n\n  if (linkCreated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n  return (\n    <div className=\"font-sans antialiased bg-white\">\n      <LoggedInNavbar />\n      <div className=\"flex flex-col justify-center items-center md:pt-36 pt-24 mx-6\">\n        <div className=\"form w-full md:w-1/2\">\n          <div className=\"tracking-wider mb-10\">\n            <h1 className=\"md:text-3xl text-2xl mb-2\">Create Link</h1>\n          </div>\n          <form onSubmit={sendPostReq}>\n            <input\n              type=\"text\"\n              min=\"4\"\n              max=\"50\"\n              placeholder=\"Link Name\"\n              name=\"linkName\"\n              id=\"linkName\"\n              onChange={(e) => setLinkName(e.target.value)}\n              value={linkName}\n              className=\"w-full p-4 border border-gray-100 bg-gray-100 rounded-xl focus:border-gray-100 focus:outline-none focus:bg-white tracking-wide mb-4\"\n              required\n            />\n            <input\n              type=\"url\"\n              placeholder=\"Link URL (https://example.com)\"\n              name=\"linkURL\"\n              id=\"linkURL\"\n              onChange={(e) => setLinkURL(e.target.value)}\n              value={linkURL}\n              className=\"w-full p-4 border border-gray-100 bg-gray-100 rounded-xl focus:border-gray-100 focus:outline-none focus:bg-white tracking-wide mb-4\"\n              required\n            />\n            <button\n              type=\"submit\"\n              className=\"p-4 bg-green-400 text-white rounded-xl\"\n            >\n              Create Link\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateLink;\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { LoggedInNavbar } from \"../components/Navbar\";\n\nfunction Analytics() {\n  const [loggedIn, setLoggedIn] = useState(true);\n  const [views, setViews] = useState(\"Loading...\");\n\n  useEffect(() => {\n    axios\n      .get(\"/api/analytics\", {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        if (response.data.message !== \"Logged in\") {\n          setLoggedIn(false);\n        }\n        setViews(response.data.views);\n      });\n  }, []);\n\n  if (!loggedIn) {\n    localStorage.removeItem(\"token\");\n    return <Redirect to=\"/login\" />;\n  }\n  return (\n    <div className=\"font-sans antialiased bg-white\">\n      <LoggedInNavbar />\n      <div className=\"flex flex-col md:pt-36 pt-24 mx-8\">\n        <div className=\"flex flex-col\">\n          <div className=\"mb-8 flex flex-col\">\n            <h1 className=\"text-2xl mb-6 tracking-widest\">My Analytics</h1>\n            <div className=\"p-8 bg-green-400 rounded-xl shadow-xl text-white tracking-wide\">\n              <div className=\"flex\">\n                <p className=\"mr-1 font-bold\">Views: </p>\n                <p>{views}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Analytics;\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { LoggedInNavbar } from \"../components/Navbar\";\n\nfunction Account() {\n  const [loggedIn, setLoggedIn] = useState(true);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [alreadyExists, setAlreadyExists] = useState(false);\n  const [accountUpdated, setAccountUpdated] = useState(false);\n  const [imgUrl, setImgUrl] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\"/api/account\", {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        if (response.data.message !== \"Logged in\") {\n          setLoggedIn(false);\n        }\n        if (response.data.message === \"Logged in\") {\n          if (\n            response.data.firstName &&\n            response.data.lastName &&\n            response.data.username &&\n            response.data.email\n          ) {\n            setFirstName(response.data.firstName);\n            setLastName(response.data.lastName);\n            setUsername(response.data.username);\n            setEmail(response.data.email);\n          }\n\n          if (response.data.bio.trim() === \"\") {\n            setBio(\"\");\n          }\n          if (response.data.bio.trim() !== \"\") {\n            setBio(response.data.bio);\n          }\n          setImgUrl(`/api/get-profile-picture/${response.data.username}`);\n        }\n      });\n  }, []);\n\n  if (!loggedIn) {\n    localStorage.removeItem(\"token\");\n    return <Redirect to=\"/login\" />;\n  }\n\n  const sendPostReq = (event) => {\n    event.preventDefault();\n\n    setAccountUpdated(false);\n    setAlreadyExists(false);\n\n    const data = {\n      firstName: firstName,\n      lastName: lastName,\n      username: username,\n      email: email,\n      bio: bio,\n    };\n\n    axios\n      .post(\n        \"/api/account\",\n        { data },\n        {\n          headers: {\n            \"x-access-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      )\n      .then((response) => {\n        if (response.data.message !== \"Logged in\") {\n          setLoggedIn(false);\n        }\n\n        if (response.data.accountUpdated) {\n          setAccountUpdated(true);\n        }\n\n        if (!response.data.accountUpdated) {\n          if (\n            response.data.error === \"Username or email belongs to another user.\"\n          ) {\n            setAlreadyExists(true);\n          }\n        }\n      });\n  };\n\n  return (\n    <div className=\"font-sans antialiased bg-white\">\n      <LoggedInNavbar />\n      <div className=\"flex flex-col justify-center items-center md:pt-36 pt-24 mx-6\">\n        <div className=\"form md:w-3/4 w-full\">\n          <div className=\"tracking-wider mb-6\">\n            <h1 className=\"text-2xl tracking-widest mb-2\">My Account</h1>\n            <img\n              src={imgUrl}\n              alt=\"Profile\"\n              className=\"rounded-full mt-4 mb-4\"\n              width=\"100\"\n            />\n            {alreadyExists ? (\n              <>\n                <span>\n                  Username or email already exists. Please choose a different\n                  one.\n                </span>\n              </>\n            ) : (\n              <></>\n            )}\n\n            {accountUpdated ? (\n              <>\n                <span>Your account has successfully been updated!</span>\n              </>\n            ) : (\n              <></>\n            )}\n          </div>\n          <form onSubmit={sendPostReq}>\n            <div className=\"w-full flex justify-center items-center\">\n              <input\n                type=\"text\"\n                min=\"4\"\n                max=\"20\"\n                placeholder=\"First Name\"\n                name=\"username\"\n                id=\"username\"\n                onChange={(e) => setFirstName(e.target.value)}\n                value={firstName}\n                className=\"w-1/2 mr-1 p-4 border border-gray-100 bg-gray-100 rounded-xl focus:border-gray-100 focus:outline-none focus:bg-white tracking-wide mb-4\"\n                required\n              />\n              <input\n                type=\"text\"\n                min=\"4\"\n                max=\"30\"\n                placeholder=\"Last Name\"\n                name=\"username\"\n                id=\"username\"\n                onChange={(e) => setLastName(e.target.value)}\n                value={lastName}\n                className=\"w-1/2 ml-1 p-4 border border-gray-100 bg-gray-100 rounded-xl focus:border-gray-100 focus:outline-none focus:bg-white tracking-wide mb-4\"\n                required\n              />\n            </div>\n            <input\n              type=\"text\"\n              min=\"4\"\n              max=\"20\"\n              placeholder=\"Username\"\n              name=\"username\"\n              id=\"username\"\n              onChange={(e) => setUsername(e.target.value)}\n              value={username}\n              className=\"w-full p-4 border border-gray-100 bg-gray-100 rounded-xl focus:border-gray-100 focus:outline-none focus:bg-white tracking-wide mb-4\"\n              required\n            />\n            <input\n              type=\"email\"\n              min=\"7\"\n              max=\"320\"\n              placeholder=\"Email\"\n              name=\"email\"\n              id=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n              className=\"w-full p-4 border border-gray-100 bg-gray-100 rounded-xl focus:border-gray-100 focus:outline-none focus:bg-white tracking-wide mb-4\"\n              required\n            />\n            <textarea\n              type=\"text\"\n              min=\"4\"\n              max=\"500\"\n              placeholder=\"Bio\"\n              name=\"bio\"\n              id=\"bio\"\n              onChange={(e) => setBio(e.target.value)}\n              value={bio}\n              className=\"w-full max-h-56 p-4 border border-gray-100 bg-gray-100 rounded-xl focus:border-gray-100 focus:outline-none focus:bg-white tracking-wide mb-4\"\n              style={{ minHeight: \"90px\" }}\n            ></textarea>\n            <div className=\"flex flex-col items-start mb-4\">\n              <span>\n                Want to update your profile picture? Click{\" \"}\n                <Link\n                  to=\"/update-profile-picture\"\n                  className=\"underline hover:no-underline\"\n                >\n                  here\n                </Link>\n                .\n              </span>\n              <span>\n                Want to change your password? Click{\" \"}\n                <Link\n                  className=\"underline hover:no-underline\"\n                  to=\"/change-password\"\n                >\n                  here\n                </Link>\n                .\n              </span>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"p-4 bg-green-400 text-white rounded-xl\"\n            >\n              Update Account\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Account;\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { LoggedInNavbar } from \"../components/Navbar\";\n\nfunction ProfilePicture() {\n  const [loggedIn, setLoggedIn] = useState(true);\n  const [profilePicture, setProfilePicture] = useState(null);\n  const [profilePicResponse, setProfilePicResponse] = useState(null);\n\n  useEffect(() => {\n    axios\n      .get(\"/api/update-profile-picture\", {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        if (response.data.message !== \"Logged in\") {\n          setLoggedIn(false);\n        }\n      });\n  }, []);\n\n  if (!loggedIn) {\n    localStorage.removeItem(\"token\");\n    return <Redirect to=\"/login\" />;\n  }\n\n  const sendPostReq = (event) => {\n    event.preventDefault();\n    setProfilePicResponse(null);\n    const data = new FormData();\n    data.append(\"file\", profilePicture);\n    axios\n      .post(\"/api/update-profile-picture\", data, {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        if (response.data.message !== \"Logged in\") {\n          setLoggedIn(false);\n        }\n\n        if (response.data.statusResponse !== \"Image uploaded successfully!\") {\n          setProfilePicResponse(\"An error occurred. Please try again later.\");\n        } else {\n          setProfilePicResponse(\n            \"Your profile picture has been uploaded successfully!\"\n          );\n        }\n      });\n  };\n  return (\n    <div className=\"font-sans antialiased bg-white\">\n      <LoggedInNavbar />\n      <div className=\"flex flex-col justify-center items-center md:pt-36 pt-24 mx-6\">\n        <div className=\"form md:w-3/4 w-full\">\n          <div className=\"tracking-wider mb-8\">\n            <h1 className=\"text-2xl tracking-widest mb-2\">\n              Update Profile Picture\n            </h1>\n            <p>{profilePicResponse}</p>\n            {profilePicResponse ===\n            \"Your profile picture has been uploaded successfully!\" ? (\n              <a href=\"/account\" className=\"text-blue-500\">\n                Back to my account\n              </a>\n            ) : (\n              <></>\n            )}\n          </div>\n          <form onSubmit={sendPostReq} encType=\"mutlipart/form-data\">\n            <div className=\"w-full flex justify-center items-center\">\n              <input\n                type=\"file\"\n                placeholder=\"Profile Picture\"\n                id=\"file\"\n                name=\"file\"\n                onChange={(e) => setProfilePicture(e.target.files[0])}\n                className=\"w-full p-4 border border-gray-100 bg-gray-100 rounded-xl focus:border-gray-100 focus:outline-none focus:bg-white tracking-wide mb-4\"\n                accept=\"image/*\"\n                required\n              />\n            </div>\n            <button\n              type=\"submit\"\n              className=\"p-4 bg-green-400 text-white rounded-xl\"\n            >\n              Update Profile Picture\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfilePicture;\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { LoggedInNavbar } from \"../components/Navbar\";\n\nfunction ChangePassword() {\n  const [loggedIn, setLoggedIn] = useState(true);\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [passwordUpdated, setPasswordUpdated] = useState(false);\n  const [currentPasswordMatch, setCurrentPasswordMatch] = useState(true);\n\n  useEffect(() => {\n    axios\n      .get(\"/api/change-password\", {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        if (response.data.message !== \"Logged in\") {\n          setLoggedIn(false);\n        }\n      });\n  }, []);\n\n  if (!loggedIn) {\n    localStorage.removeItem(\"token\");\n    return <Redirect to=\"/login\" />;\n  }\n\n  const sendPostReq = (event) => {\n    event.preventDefault();\n    setPasswordUpdated(false);\n    setCurrentPasswordMatch(true);\n\n    const data = {\n      currentPassword: currentPassword,\n      newPassword: newPassword,\n    };\n\n    axios\n      .post(\n        \"/api/change-password\",\n        { data },\n        {\n          headers: {\n            \"x-access-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      )\n      .then((response) => {\n        if (response.data.message !== \"Logged in\") {\n          setLoggedIn(false);\n        }\n\n        if (response.data.passwordUpdated) {\n          setPasswordUpdated(true);\n          setCurrentPassword(\"\");\n          setNewPassword(\"\");\n        }\n\n        if (response.data.passwordUpdated === false) {\n          setCurrentPasswordMatch(false);\n          setCurrentPassword(\"\");\n          setNewPassword(\"\");\n        }\n      });\n  };\n\n  return (\n    <div className=\"font-sans antialiased bg-white\">\n      <LoggedInNavbar />\n      <div className=\"flex flex-col justify-center items-center md:pt-36 pt-24 mx-6\">\n        <div className=\"form md:w-3/4 w-full\">\n          <div className=\"tracking-wider mb-10\">\n            <h1 className=\"text-2xl tracking-widest mb-2\">Change Password</h1>\n            {passwordUpdated ? (\n              <div className=\"flex flex-col\">\n                <span>Your password has successfully been updated!</span>\n                <Link to=\"/account\" className=\"mt-2 text-blue-500\">\n                  Back to account\n                </Link>\n              </div>\n            ) : (\n              <></>\n            )}\n            {!currentPasswordMatch ? (\n              <>\n                <span>\n                  Current password is invalid. Please enter in the correct\n                  current password to proceed.\n                </span>\n              </>\n            ) : (\n              <></>\n            )}\n          </div>\n          <form onSubmit={sendPostReq}>\n            <input\n              type=\"password\"\n              min=\"8\"\n              placeholder=\"Current Password\"\n              name=\"current-password\"\n              id=\"current-password\"\n              onChange={(e) => setCurrentPassword(e.target.value)}\n              value={currentPassword}\n              className=\"w-full p-4 border border-gray-100 bg-gray-100 rounded-xl focus:border-gray-100 focus:outline-none focus:bg-white tracking-wide mb-4\"\n              required\n            />\n            <input\n              type=\"password\"\n              min=\"8\"\n              placeholder=\"New Password\"\n              name=\"new-password\"\n              id=\"new-password\"\n              onChange={(e) => setNewPassword(e.target.value)}\n              value={newPassword}\n              className=\"w-full p-4 border border-gray-100 bg-gray-100 rounded-xl focus:border-gray-100 focus:outline-none focus:bg-white tracking-wide mb-4\"\n              required\n            />\n            <button\n              type=\"submit\"\n              className=\"p-4 bg-green-400 text-white rounded-xl\"\n            >\n              Update Password\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChangePassword;\n","import React, { useState, useEffect } from \"react\";\nimport { Navbar } from \"../components/Navbar\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction ForgotPassword() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [invalidUser, setInvalidUser] = useState(false);\n  const [emailSent, setEmailSent] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      setLoggedIn(true);\n    }\n  }, []);\n\n  if (loggedIn) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  const sendPostReq = (event) => {\n    event.preventDefault();\n    setInvalidUser(false);\n    setEmailSent(false);\n\n    const data = {\n      email: email,\n      frontendURL: document.location.origin,\n    };\n\n    axios.post(\"/api/forgot-password\", { data }).then((response) => {\n      if (response.data.userValid) {\n        setEmailSent(true);\n      }\n      if (response.data.userValid === false) {\n        setInvalidUser(true);\n      }\n    });\n  };\n\n  return (\n    <div className=\"font-sans antialiased bg-white\">\n      <Navbar />\n      <div className=\"flex flex-col justify-center items-center md:pt-36 pt-24 mx-6\">\n        <div className=\"form w-full md:w-1/2\">\n          <div className=\"tracking-wider mb-8\">\n            <h1 className=\"md:text-3xl text-2xl mb-2\">Forgot your password?</h1>\n            {!invalidUser && !emailSent ? (\n              <span>\n                We'll send you a link to reset your password to your inbox.\n              </span>\n            ) : (\n              <>\n                {emailSent ? (\n                  <span>\n                    An email has been sent to reset your password. If it does\n                    not appear in your inbox, please check your spam.\n                  </span>\n                ) : (\n                  <></>\n                )}\n                {invalidUser ? (\n                  <span>\n                    There is no user associated with that email address.\n                  </span>\n                ) : (\n                  <></>\n                )}\n              </>\n            )}\n          </div>\n          <form onSubmit={sendPostReq}>\n            <input\n              type=\"email\"\n              min=\"7\"\n              max=\"320\"\n              placeholder=\"Email\"\n              name=\"email\"\n              id=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n              className=\"w-full p-4 border border-gray-100 bg-gray-100 rounded-xl focus:border-gray-100 focus:outline-none focus:bg-white tracking-wide mb-4\"\n              required\n            />\n            <button\n              type=\"submit\"\n              className=\"p-4 bg-green-400 text-white rounded-xl\"\n            >\n              Send Reset Link\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ForgotPassword;\n","import React, { useState, useEffect } from \"react\";\nimport { Navbar } from \"../components/Navbar\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useParams, Link } from \"react-router-dom\";\n\nfunction ResetPassword() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [invalidUser, setInvalidUser] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [passwordUpdated, setPasswordUpdated] = useState(false);\n  const { token } = useParams();\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      setLoggedIn(true);\n    }\n\n    axios.get(`/api/reset-password/${token}`).then((response) => {\n      if (response.data.message !== \"User valid\") {\n        setInvalidUser(true);\n      }\n      if (response.data.message === \"User valid\") {\n        if (response.data.userEmail) {\n          setUserEmail(response.data.userEmail);\n        }\n      }\n    });\n  }, [token]);\n\n  if (loggedIn) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  const sendPostReq = (event) => {\n    event.preventDefault();\n\n    const data = {\n      newPassword: newPassword,\n    };\n\n    axios.post(`/api/reset-password/${token}`, { data }).then((response) => {\n      if (response.data.passwordUpdated) {\n        setPasswordUpdated(true);\n        setNewPassword(\"\");\n      }\n      if (response.data.passwordUpdated === false) {\n        setPasswordUpdated(false);\n      }\n    });\n  };\n  return (\n    <div className=\"font-sans antialiased bg-white\">\n      <Navbar />\n\n      {invalidUser ? (\n        <div className=\"flex flex-col justify-center items-center text-center md:pt-36 pt-24 mx-4\">\n          <div className=\"form w-full md:w-1/2\">\n            <div className=\"tracking-wider mb-10\">\n              <h1 className=\"md:text-3xl text-2xl mb-2\">Invalid Token</h1>\n              <p>The token passed in the URL is not valid.</p>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"flex flex-col justify-center items-center md:mt-16 mt-12 mx-6\">\n          <div className=\"form w-full md:w-1/2\">\n            <div className=\"tracking-wider mb-8\">\n              <h1 className=\"md:text-3xl text-2xl mb-2\">Reset Password</h1>\n              {passwordUpdated ? (\n                <div className=\"flex flex-col\">\n                  <span>\n                    Your password has successfully been reset! You can log in\n                    now.{\" \"}\n                  </span>\n                  <Link to=\"/login\" className=\"mt-2 text-blue-500\">\n                    Go to login\n                  </Link>\n                </div>\n              ) : (\n                <>\n                  <span>\n                    The password that you enter in will be the new password for{\" \"}\n                    {userEmail}'s account.\n                  </span>\n                </>\n              )}\n            </div>\n            <form onSubmit={sendPostReq}>\n              <input\n                type=\"password\"\n                min=\"7\"\n                max=\"320\"\n                placeholder=\"New Password\"\n                name=\"new-password\"\n                id=\"new-password\"\n                onChange={(e) => setNewPassword(e.target.value)}\n                value={newPassword}\n                className=\"w-full p-4 border border-gray-100 bg-gray-100 rounded-xl focus:border-gray-100 focus:outline-none focus:bg-white tracking-wide mb-4\"\n                required\n              />\n              <button\n                type=\"submit\"\n                className=\"p-4 bg-green-400 text-white rounded-xl\"\n              >\n                Reset Password\n              </button>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ResetPassword;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { LoggedInNavbar } from \"../components/Navbar.js\";\n\nfunction EditSite() {\n  const [loggedIn, setLoggedIn] = useState(true);\n  const [siteBgColor, setSiteBgColor] = useState(\"\");\n  const [linkBgColor, setLinkBgColor] = useState(\"\");\n  const [linkColor, setLinkColor] = useState(\"\");\n  const [textColor, setTextColor] = useState(\"\");\n  const [siteUpdated, setSiteUpdated] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(\"/api/edit-site\", {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        if (response.data.message !== \"Logged in\") {\n          setLoggedIn(false);\n        }\n\n        if (response.data.siteConfig) {\n          setSiteBgColor(response.data.siteConfig.bgColor);\n          setLinkBgColor(response.data.siteConfig.linkBgColor);\n          setLinkColor(response.data.siteConfig.linkColor);\n          setTextColor(response.data.siteConfig.textColor);\n        }\n      });\n  }, []);\n\n  if (!loggedIn) {\n    localStorage.removeItem(\"token\");\n    return <Redirect to=\"/login\" />;\n  }\n\n  const sendPostReq = (event) => {\n    event.preventDefault();\n\n    const siteConfig = {\n      bgColor: siteBgColor,\n      linkBgColor: linkBgColor,\n      linkColor: linkColor,\n      textColor: textColor,\n    };\n\n    axios\n      .post(\n        \"/api/edit-site\",\n        { siteConfig },\n        {\n          headers: {\n            \"x-access-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      )\n      .then((response) => {\n        if (response.data.message !== \"Logged in\") {\n          setLoggedIn(false);\n        }\n        if (response.data.siteUpdated) {\n          setSiteUpdated(true);\n        }\n      });\n  };\n\n  return (\n    <div className=\"font-sans antialiased bg-white\">\n      <LoggedInNavbar />\n      <div className=\"flex flex-col justify-center items-center md:pt-36 pt-24 mx-6\">\n        <div className=\"form md:w-3/4 w-full\">\n          <div className=\"tracking-wider mb-10\">\n            <h1 className=\"text-2xl mb-2 tracking-widest mb-2\">Edit My Site</h1>\n            {siteUpdated ? (\n              <>\n                <span>Your site settings have successfully been updated!</span>\n              </>\n            ) : (\n              <></>\n            )}\n          </div>\n          <form onSubmit={sendPostReq}>\n            <div className=\"w-full flex-col justify-center items-center\">\n              <div className=\"flex flex-col p-4 bg-gray-100 rounded-xl mb-6\">\n                <div className=\"flex flex-col mb-6\">\n                  <label className=\"mb-2\">Site Background Color</label>\n                  <input\n                    type=\"color\"\n                    name=\"siteBgColor\"\n                    id=\"siteBgColor\"\n                    value={siteBgColor}\n                    onChange={(e) => setSiteBgColor(e.target.value)}\n                    className=\"w-full bg-transparent\"\n                  />\n                </div>\n                <div className=\"flex flex-col mb-6\">\n                  <label className=\"mb-2\">Link Background Color</label>\n                  <input\n                    type=\"color\"\n                    name=\"linkBgColor\"\n                    id=\"linkBgColor\"\n                    value={linkBgColor}\n                    onChange={(e) => setLinkBgColor(e.target.value)}\n                    className=\"w-full bg-transparent\"\n                  />\n                </div>\n                <div className=\"flex flex-col mb-6\">\n                  <label className=\"mb-2\">Link Color</label>\n                  <input\n                    type=\"color\"\n                    name=\"linkColor\"\n                    id=\"linkColor\"\n                    value={linkColor}\n                    onChange={(e) => setLinkColor(e.target.value)}\n                    className=\"w-full bg-transparent\"\n                  />\n                </div>\n                <div className=\"flex flex-col mb-4\">\n                  <label className=\"mb-2\">Text Color</label>\n                  <input\n                    type=\"color\"\n                    name=\"textColor\"\n                    id=\"textColor\"\n                    value={textColor}\n                    onChange={(e) => setTextColor(e.target.value)}\n                    className=\"w-full bg-transparent\"\n                  />\n                </div>\n              </div>\n              <button\n                type=\"submit\"\n                className=\"p-4 bg-green-400 text-white rounded-xl\"\n              >\n                Update Site Settings\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default EditSite;\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { LoggedInNavbar } from \"../components/Navbar\";\n\nfunction CreateLink() {\n  const { linkId } = useParams();\n\n  const [loggedIn, setLoggedIn] = useState(true);\n  const [linkName, setLinkName] = useState(\"\");\n  const [linkURL, setLinkURL] = useState(\"\");\n  const [linkEdited, setLinkEdited] = useState(false);\n  const [notFound, setNotFound] = useState(false);\n  const [forbidden, setForbidden] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(`/api/edit-link/${linkId}`, {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        if (response.data.message !== \"Logged in\") {\n          setLoggedIn(false);\n        }\n\n        if (response.data.forbidden === \"Cannot do that\") {\n          setForbidden(true);\n        }\n\n        if (response.data.notFound === \"404 not found\") {\n          setNotFound(true);\n        }\n\n        if (response.data.link) {\n          setLinkName(response.data.link.linkName);\n          setLinkURL(response.data.link.linkURL);\n        }\n      });\n  }, [linkId]);\n\n  const sendPostReq = (event) => {\n    event.preventDefault();\n\n    const link = {\n      linkId: linkId,\n      linkName: linkName,\n      linkURL: linkURL,\n    };\n\n    const token = localStorage.getItem(\"token\");\n\n    axios\n      .post(\n        `/api/edit-link/${linkId}`,\n        { link },\n        {\n          headers: {\n            \"x-access-token\": token,\n          },\n        }\n      )\n      .then((response) => {\n        if (response.data.message !== \"Logged in\") {\n          setLoggedIn(false);\n        }\n        if (response.data.linkUpdated) {\n          setLinkEdited(true);\n        }\n        if (response.data.forbidden === \"Cannot do that\") {\n          setForbidden(true);\n        }\n\n        if (response.data.notFound === \"404 not found\") {\n          setNotFound(true);\n        }\n      });\n  };\n\n  if (!loggedIn) {\n    localStorage.removeItem(\"token\");\n    return <Redirect to=\"/login\" />;\n  }\n\n  if (forbidden) {\n    return <Redirect to=\"/403-forbidden\" />;\n  }\n\n  if (notFound) {\n    return <Redirect to=\"/404-page-not-found\" />;\n  }\n\n  if (linkEdited) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <div className=\"font-sans antialiased bg-white\">\n      <LoggedInNavbar />\n      <div className=\"flex flex-col justify-center items-center md:pt-36 pt-24 mx-6\">\n        <div className=\"form w-full md:w-1/2\">\n          <div className=\"tracking-wider mb-10\">\n            <h1 className=\"md:text-3xl text-2xl mb-2\">Edit Link</h1>\n          </div>\n          <form onSubmit={sendPostReq}>\n            <input\n              type=\"text\"\n              min=\"4\"\n              max=\"50\"\n              placeholder=\"Link Name\"\n              name=\"linkName\"\n              id=\"linkName\"\n              onChange={(e) => setLinkName(e.target.value)}\n              value={linkName}\n              className=\"w-full p-4 border border-gray-100 bg-gray-100 rounded-xl focus:border-gray-100 focus:outline-none focus:bg-white tracking-wide mb-4\"\n              required\n            />\n            <input\n              type=\"url\"\n              placeholder=\"Link URL (https://example.com)\"\n              name=\"linkURL\"\n              id=\"linkURL\"\n              onChange={(e) => setLinkURL(e.target.value)}\n              value={linkURL}\n              className=\"w-full p-4 border border-gray-100 bg-gray-100 rounded-xl focus:border-gray-100 focus:outline-none focus:bg-white tracking-wide mb-4\"\n              required\n            />\n            <button\n              type=\"submit\"\n              className=\"p-4 bg-green-400 text-white rounded-xl\"\n            >\n              Update Link\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateLink;\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction UserPage() {\n  const { username } = useParams();\n  const [userData, setUserData] = useState([{}]);\n  const [doesUserExist, setDoesUserExist] = useState(true);\n  const [imgUrl, setImgUrl] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(`/api/${username}`, {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\"),\n          \"real-request\": true,\n        },\n      })\n      .then((response) => {\n        if (response.data.message === \"User does not exist\") {\n          setDoesUserExist(false);\n        }\n\n        if (response.data.message === \"User found\") {\n          setDoesUserExist(true);\n          setUserData(response.data.userData);\n          setImgUrl(\n            `/api/get-profile-picture/${response.data.userData.username}`\n          );\n        }\n      });\n  }, [username]);\n\n  if (doesUserExist === false) {\n    return <Redirect to=\"/404-page-not-found\" />;\n  }\n\n  if (typeof userData !== \"undefined\") {\n    return (\n      <div\n        className=\"font-sans antialiased\"\n        style={{\n          backgroundColor: userData.bgColor,\n          color: userData.textColor,\n          minHeight: \"100vh\",\n        }}\n      >\n        <div className=\"flex flex-col justify-center items-center pt-12 mx-6\">\n          <div className=\"flex flex-col justify-center items-center mb-12\">\n            <img\n              src={imgUrl}\n              alt=\"Profile\"\n              className=\"rounded-full\"\n              width=\"100\"\n            />\n            <h1 className=\"md:text-2xl text-xl mt-4 mb-2 tracking-widest\">\n              {userData.userFirstName} {userData.userLastName}\n            </h1>\n            <span className=\"tracking-wide\">{userData.userBio}</span>\n          </div>\n          <div className=\"flex flex-col justify-center items-center sm:w-1/2 tracking-wide w-full\">\n            {typeof userData.userLinks !== \"undefined\" ? (\n              userData.userLinks.map((link, index) => (\n                <div\n                  key={index}\n                  className=\"py-4 px-6 text-lg text-center shadow-lg rounded-2xl mb-6 w-full\"\n                  style={{ backgroundColor: userData.linkBgColor }}\n                >\n                  <a\n                    href={link.linkURL}\n                    target=\"__blank\"\n                    style={{ color: userData.linkColor }}\n                  >\n                    {link.linkName}\n                  </a>\n                </div>\n              ))\n            ) : (\n              <></>\n            )}\n          </div>\n          <p\n            className=\"text-center tracking-wider\"\n            style={{ bottom: 24, position: \"absolute\" }}\n          >\n            Powered by NodeLink ❤️\n          </p>\n        </div>\n      </div>\n    );\n  } else {\n    <p>Loading...</p>;\n  }\n}\n\nexport default UserPage;\n","import React from \"react\";\nimport { LoggedInNavbar, Navbar } from \"../components/Navbar\";\nimport { Link } from \"react-router-dom\";\n\nfunction NotFound() {\n  return (\n    <div className=\"font-sans antialiased bg-white\">\n      {localStorage.getItem(\"token\") ? <LoggedInNavbar /> : <Navbar />}\n      <div className=\"flex flex-col justify-center items-center text-center md:pt-36 pt-24 mx-4\">\n        <div className=\"form w-full md:w-1/2\">\n          <div className=\"tracking-wider mb-10\">\n            <h1 className=\"md:text-3xl text-2xl mb-2\">404</h1>\n            <p>\n              Oops! The page your looking for may have been removed or does not\n              exist.\n            </p>\n            <br></br>\n            {localStorage.getItem(\"token\") ? (\n              <Link className=\"text-blue-500\" to=\"/dashboard\">\n                Return to dashboard.\n              </Link>\n            ) : (\n              <Link className=\"text-blue-500\" to=\"/home\">\n                Return to home.\n              </Link>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport { LoggedInNavbar, Navbar } from \"../components/Navbar\";\nimport { Link } from \"react-router-dom\";\n\nfunction Forbidden() {\n  return (\n    <div className=\"font-sans antialiased bg-white\">\n      {localStorage.getItem(\"token\") ? <LoggedInNavbar /> : <Navbar />}\n      <div className=\"flex flex-col justify-center items-center text-center md:pt-36 pt-24 mx-4\">\n        <div className=\"form w-full md:w-1/2\">\n          <div className=\"tracking-wider mb-10\">\n            <h1 className=\"md:text-3xl text-2xl mb-2\">403</h1>\n            <p>You do not have permission to do that.</p>\n            <br></br>\n            {localStorage.getItem(\"token\") ? (\n              <Link className=\"text-blue-500\" to=\"/dashboard\">\n                Return to dashboard.\n              </Link>\n            ) : (\n              <Link className=\"text-blue-500\" to=\"/home\">\n                Return to home.\n              </Link>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Forbidden;\n","import React from \"react\";\nimport Home from \"./pages/Home\";\nimport Register from \"./pages/Register\";\nimport Login from \"./pages/Login\";\nimport Logout from \"./pages/Logout\";\nimport Dashboard from \"./pages/Dashboard\";\nimport CreateLink from \"./pages/CreateLink\";\nimport Analytics from \"./pages/Analytics\";\nimport Account from \"./pages/Account\";\nimport ProfilePicture from \"./pages/ProfilePicture\";\nimport ChangePassword from \"./pages/ChangePassword\";\nimport ForgotPassword from \"./pages/ForgotPassword\";\nimport ResetPassword from \"./pages/ResetPassword\";\nimport EditSite from \"./pages/EditSite\";\nimport EditLink from \"./pages/EditLink\";\nimport UserProfile from \"./pages/UserProfile\";\nimport NotFound from \"./pages/404\";\nimport Forbidden from \"./pages/403\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path={[\"/\", \"/home\"]}>\n          <Home />\n        </Route>\n\n        <Route exact path={[\"/register\", \"/sign-up\"]}>\n          <Register />\n        </Route>\n\n        <Route exact path={[\"/login\", \"/log-in\"]}>\n          <Login />\n        </Route>\n\n        <Route exact path=\"/logout\">\n          <Logout />\n        </Route>\n\n        <Route exact path=\"/dashboard\">\n          <Dashboard />\n        </Route>\n\n        <Route exact path=\"/create-link\">\n          <CreateLink />\n        </Route>\n\n        <Route exact path=\"/analytics\">\n          <Analytics />\n        </Route>\n\n        <Route exact path=\"/account\">\n          <Account />\n        </Route>\n\n        <Route exact path=\"/update-profile-picture\">\n          <ProfilePicture />\n        </Route>\n\n        <Route exact path=\"/change-password\">\n          <ChangePassword />\n        </Route>\n\n        <Route exact path=\"/forgot-password\">\n          <ForgotPassword />\n        </Route>\n\n        <Route exact path=\"/reset-password/:token\">\n          <ResetPassword />\n        </Route>\n\n        <Route exact path=\"/edit-site\">\n          <EditSite />\n        </Route>\n\n        <Route exact path=\"/edit-link/:linkId\">\n          <EditLink />\n        </Route>\n\n        <Route exact path=\"/404-page-not-found\">\n          <NotFound />\n        </Route>\n\n        <Route exact path=\"/403-forbidden\">\n          <Forbidden />\n        </Route>\n\n        <Route exact path=\"/:username\">\n          <UserProfile />\n        </Route>\n\n        <Route component={NotFound} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}